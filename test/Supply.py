# Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
# Arista Networks, Inc. Confidential and Proprietary.
#
# DON'T EDIT THIS FILE. It was generated by
# /usr/local/lib64/python3.9/site-packages/CTypeGen/__init__.py
# Please see AID/3558 for details on the contents of this file
#
from ctypes import * # pylint: disable=wildcard-import
from CTypeGenRun import * # pylint: disable=wildcard-import
# pylint: disable=unnecessary-pass,protected-access




class struct_Supply( Structure, TestableCtypeClass ):
   pass


struct_Supply._ctypegen_native_size = 8
struct_Supply._ctypegen_have_definition = True
struct_Supply._fields_pre = [ # pylint: disable=protected-access
   ( "field1", c_int ),
   ( "field2", c_int ),
]
struct_Supply._fields_ = struct_Supply._fields_pre

struct_Supply._ctypegen_offsets = [ 0, 4 ]

Supply = struct_Supply # unambiguous name for tagged type
class Globals(object):
   def __init__(self, dll):
      self.supplied = ( struct_Supply ).in_dll( dll, 'supplied' )
      pass
def decorateFunctions( lib ):
   pass


CTYPEGEN_producers__ = {
	"GNU C++17 11.2.1 20210728 (Red Hat 11.2.1-1) -mtune=generic -march=x86-64 -g3 -fPIC",
}

if __name__ == "__main__":
   test_classes()
